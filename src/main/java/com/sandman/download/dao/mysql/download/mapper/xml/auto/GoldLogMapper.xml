<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sandman.download.dao.mysql.download.mapper.auto.GoldLogMapper" >
  <resultMap id="BaseResultMap" type="com.sandman.download.dao.mysql.download.model.auto.GoldLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="resource_id" property="resourceId" jdbcType="INTEGER" />
    <result column="resource_name" property="resourceName" jdbcType="VARCHAR" />
    <result column="original_gold" property="originalGold" jdbcType="INTEGER" />
    <result column="resource_gold" property="resourceGold" jdbcType="INTEGER" />
    <result column="current_gold" property="currentGold" jdbcType="INTEGER" />
    <result column="operation_desc" property="operationDesc" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, resource_id, resource_name, original_gold, resource_gold, current_gold, 
    operation_desc, create_time, update_time, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sandman.download.dao.mysql.download.model.auto.GoldLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_gold_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_gold_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_gold_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sandman.download.dao.mysql.download.model.auto.GoldLogExample" >
    delete from t_gold_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sandman.download.dao.mysql.download.model.auto.GoldLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_gold_log (user_id, resource_id, resource_name, 
      original_gold, resource_gold, current_gold, 
      operation_desc, create_time, update_time, 
      del_flag)
    values (#{userId,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER}, #{resourceName,jdbcType=VARCHAR}, 
      #{originalGold,jdbcType=INTEGER}, #{resourceGold,jdbcType=INTEGER}, #{currentGold,jdbcType=INTEGER}, 
      #{operationDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sandman.download.dao.mysql.download.model.auto.GoldLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_gold_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="resourceName != null" >
        resource_name,
      </if>
      <if test="originalGold != null" >
        original_gold,
      </if>
      <if test="resourceGold != null" >
        resource_gold,
      </if>
      <if test="currentGold != null" >
        current_gold,
      </if>
      <if test="operationDesc != null" >
        operation_desc,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="resourceName != null" >
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="originalGold != null" >
        #{originalGold,jdbcType=INTEGER},
      </if>
      <if test="resourceGold != null" >
        #{resourceGold,jdbcType=INTEGER},
      </if>
      <if test="currentGold != null" >
        #{currentGold,jdbcType=INTEGER},
      </if>
      <if test="operationDesc != null" >
        #{operationDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sandman.download.dao.mysql.download.model.auto.GoldLogExample" resultType="java.lang.Integer" >
    select count(*) from t_gold_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_gold_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.resourceId != null" >
        resource_id = #{record.resourceId,jdbcType=INTEGER},
      </if>
      <if test="record.resourceName != null" >
        resource_name = #{record.resourceName,jdbcType=VARCHAR},
      </if>
      <if test="record.originalGold != null" >
        original_gold = #{record.originalGold,jdbcType=INTEGER},
      </if>
      <if test="record.resourceGold != null" >
        resource_gold = #{record.resourceGold,jdbcType=INTEGER},
      </if>
      <if test="record.currentGold != null" >
        current_gold = #{record.currentGold,jdbcType=INTEGER},
      </if>
      <if test="record.operationDesc != null" >
        operation_desc = #{record.operationDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_gold_log
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      resource_id = #{record.resourceId,jdbcType=INTEGER},
      resource_name = #{record.resourceName,jdbcType=VARCHAR},
      original_gold = #{record.originalGold,jdbcType=INTEGER},
      resource_gold = #{record.resourceGold,jdbcType=INTEGER},
      current_gold = #{record.currentGold,jdbcType=INTEGER},
      operation_desc = #{record.operationDesc,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sandman.download.dao.mysql.download.model.auto.GoldLog" >
    update t_gold_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null" >
        resource_id = #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="resourceName != null" >
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="originalGold != null" >
        original_gold = #{originalGold,jdbcType=INTEGER},
      </if>
      <if test="resourceGold != null" >
        resource_gold = #{resourceGold,jdbcType=INTEGER},
      </if>
      <if test="currentGold != null" >
        current_gold = #{currentGold,jdbcType=INTEGER},
      </if>
      <if test="operationDesc != null" >
        operation_desc = #{operationDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sandman.download.dao.mysql.download.model.auto.GoldLog" >
    update t_gold_log
    set user_id = #{userId,jdbcType=INTEGER},
      resource_id = #{resourceId,jdbcType=INTEGER},
      resource_name = #{resourceName,jdbcType=VARCHAR},
      original_gold = #{originalGold,jdbcType=INTEGER},
      resource_gold = #{resourceGold,jdbcType=INTEGER},
      current_gold = #{currentGold,jdbcType=INTEGER},
      operation_desc = #{operationDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>